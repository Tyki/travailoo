import { KuzzleRequest } from "../request";
import { NativeController } from "./baseController";
/**
 * @class DebugController
 */
export declare class DebugController extends NativeController {
    constructor();
    /**
     * Return the node version of the current Kuzzle instance
     */
    nodeVersion(): Promise<string>;
    /**
     * Connect the debugger
     */
    enable(): Promise<void>;
    /**
     * Disconnect the debugger and clears all the events listeners
     */
    disable(): Promise<void>;
    /**
     * Trigger action from debugger directly following the Chrome Debug Protocol
     * See: https://chromedevtools.github.io/devtools-protocol/v8/
     */
    post(request: KuzzleRequest): Promise<any>;
    /**
     * Make the websocket connection listen and receive events from Chrome Debug Protocol
     * See events from: https://chromedevtools.github.io/devtools-protocol/v8/
     */
    addListener(request: KuzzleRequest): Promise<void>;
    /**
     * Remove the websocket connection from the events' listeners
     */
    removeListener(request: KuzzleRequest): Promise<void>;
}
