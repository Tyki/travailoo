import { JSONObject } from "../../index";
import { HttpStream } from "../types";
/**
 * Flatten an object transform:
 * {
 *  title: "kuzzle",
 *  info : {
 *    tag: "news"
 *  }
 * }
 *
 * Into an object like:
 * {
 *  title: "kuzzle",
 *  info.tag: news
 * }
 *
 * @param {Object} target the object we have to flatten
 * @returns {Object} the flattened object
 */
export declare function flattenObject(target: JSONObject): JSONObject;
/**
 * Extract fields from mapping by removing the properties from es mapping
 *
 * @param mapping
 * @returns
 */
export declare function extractMappingFields(mapping: JSONObject): any;
/**
 * An iteration-order-safe version of lodash.values
 *
 * @param object The object containing the values
 * @param fields The field names to pick in the right order
 * @returns The values in the same order as the fields
 * @see https://lodash.com/docs/4.17.15#values
 */
export declare function pickValues(object: any, fields: string[]): any[];
export declare function dumpCollectionDocuments(index: string, collection: string, query?: any, format?: string, fields?: string[], options?: JSONObject): HttpStream;
