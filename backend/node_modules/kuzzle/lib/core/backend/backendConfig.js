"use strict";
/*
 * Kuzzle, a backend software, self-hostable and ready to use
 * to power modern apps
 *
 * Copyright 2015-2022 Kuzzle
 * mailto: support AT kuzzle.io
 * website: http://kuzzle.io
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BackendConfig = void 0;
const lodash_1 = __importDefault(require("lodash"));
const kerror = __importStar(require("../../kerror"));
const index_1 = require("./index");
const index_js_1 = require("../../config/index.js");
const runtimeError = kerror.wrap("plugin", "runtime");
class BackendConfig extends index_1.ApplicationManager {
    constructor(application) {
        super(application);
        this.content = (0, index_js_1.loadConfig)();
    }
    /**
     * Sets a configuration value
     *
     * @deprecated use app.config.content instead
     *
     * @param path - Path to the configuration key (lodash style)
     * @param value - Value for the configuration key
     */
    set(path, value) {
        if (this._application.started) {
            throw runtimeError.get("already_started", "config");
        }
        lodash_1.default.set(this.content, path, value);
    }
    /**
     * Merges a configuration object into the current configuration
     *
     * @deprecated use app.config.content instead
     *
     * @param config - Configuration object to merge
     */
    merge(config) {
        if (this._application.started) {
            throw runtimeError.get("already_started", "config");
        }
        this.content = lodash_1.default.merge(this.content, config);
    }
}
exports.BackendConfig = BackendConfig;
//# sourceMappingURL=backendConfig.js.map