"use strict";
/*
 * Kuzzle, a backend software, self-hostable and ready to use
 * to power modern apps
 *
 * Copyright 2015-2022 Kuzzle
 * mailto: support AT kuzzle.io
 * website: http://kuzzle.io
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InternalLogger = void 0;
const util_1 = __importDefault(require("util"));
const index_1 = require("./index");
class InternalLogger extends index_1.ApplicationManager {
    /**
     * Logs an debug message
     */
    debug(message) {
        this._log("debug", message);
    }
    /**
     * Logs an info message
     */
    info(message) {
        this._log("info", message);
    }
    /**
     * Logs a warn message
     */
    warn(message) {
        this._log("warn", message);
    }
    /**
     * Logs an error message
     */
    error(message) {
        this._log("error", message);
    }
    /**
     * Logs a verbose message
     */
    verbose(message) {
        this._log("verbose", message);
    }
    _log(level, message) {
        if (!this._application.started) {
            // eslint-disable-next-line no-console
            console.log(util_1.default.inspect(message));
        }
        else {
            this._kuzzle.log[level](util_1.default.inspect(message));
        }
    }
}
exports.InternalLogger = InternalLogger;
//# sourceMappingURL=internalLogger.js.map