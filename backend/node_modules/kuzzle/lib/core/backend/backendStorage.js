"use strict";
/*
 * Kuzzle, a backend software, self-hostable and ready to use
 * to power modern apps
 *
 * Copyright 2015-2022 Kuzzle
 * mailto: support AT kuzzle.io
 * website: http://kuzzle.io
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BackendStorage = void 0;
const elasticsearch_1 = __importDefault(require("../../service/storage/elasticsearch"));
const index_1 = require("./index");
class BackendStorage extends index_1.ApplicationManager {
    constructor(application) {
        super(application);
        this._client = null;
        this._Client = null;
    }
    /**
     * Storage client constructor.
     * (Currently Elasticsearch)
     *
     * @param clientConfig Overload configuration for the underlaying storage client
     */
    get StorageClient() {
        if (!this._Client) {
            const kuzzle = this._kuzzle;
            this._Client = function ESClient(clientConfig = {}) {
                return elasticsearch_1.default.buildClient({
                    ...kuzzle.config.services.storageEngine.client,
                    ...clientConfig,
                });
            };
        }
        return this._Client;
    }
    /**
     * Access to the underlaying storage engine client.
     * (Currently Elasticsearch)
     */
    get storageClient() {
        if (!this._client) {
            this._client = elasticsearch_1.default.buildClient(this._kuzzle.config.services.storageEngine.client);
        }
        return this._client;
    }
}
exports.BackendStorage = BackendStorage;
//# sourceMappingURL=backendStorage.js.map