"use strict";
/*
 * Kuzzle, a backend software, self-hostable and ready to use
 * to power modern apps
 *
 * Copyright 2015-2022 Kuzzle
 * mailto: support AT kuzzle.io
 * website: http://kuzzle.io
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmbeddedSDK = void 0;
const kuzzle_sdk_1 = require("kuzzle-sdk");
const lodash_1 = __importDefault(require("lodash"));
const funnelProtocol_1 = require("./funnelProtocol");
const safeObject_1 = require("../../../util/safeObject");
const kerror = __importStar(require("../../../kerror"));
const impersonatedSdk_1 = __importDefault(require("./impersonatedSdk"));
const contextError = kerror.wrap("plugin", "context");
const forbiddenEmbeddedActions = {
    auth: new Set([
        "checkRights",
        "createApiKey",
        "createMyCredentials",
        "credentialsExist",
        "deleteApiKey",
        "getCurrentUser",
        "getMyCredentials",
        "getMyRights",
        "getStrategies",
        "logout",
        "refreshToken",
        "searchApiKeys",
        "updateMyCredentials",
        "updateSelf",
        "validateMyCredentials",
    ]),
};
const warnEmbeddedActions = {
    auth: {
        login: "EmbeddedSDK.login is deprecated, use user impersonation instead",
    },
};
/**
 * Kuzzle embedded SDK to make API calls inside applications or plugins.
 */
class EmbeddedSDK extends kuzzle_sdk_1.Kuzzle {
    constructor() {
        // FunnelProtocol is not technically a valid SDK protocol
        super(new funnelProtocol_1.FunnelProtocol(), { autoResubscribe: false });
    }
    /**
     * Returns a new SDK impersonated with the provided user.
     *
     * @param user - User to impersonate the SDK with
     * @param options - Optional sdk arguments
     */
    as(user, options = { checkRights: false }) {
        if (!(0, safeObject_1.isPlainObject)(user) || typeof user._id !== "string") {
            throw contextError.get("invalid_user");
        }
        return new impersonatedSdk_1.default(user._id, options);
    }
    /**
     * Sends an API request to Kuzzle.
     *
     * This is a low-level method, exposed to allow advanced SDK users to bypass
     * high-level methods.
     *
     * @param request - API request (https://docs.kuzzle.io/core/2/guides/main-concepts/1-api#other-protocols)
     * @param options - Optional arguments
     */
    query(request, options = {}) {
        // By default, do not propagate realtime notification accross cluster nodes
        if ((0, safeObject_1.isPlainObject)(request) &&
            request.controller === "realtime" &&
            request.action === "subscribe") {
            // @ts-expect-error
            request.propagate =
                options.propagate === undefined || options.propagate === null
                    ? false
                    : options.propagate;
        }
        if (forbiddenEmbeddedActions[request.controller] !== undefined &&
            forbiddenEmbeddedActions[request.controller].has(request.action)) {
            throw kerror.get("api", "process", "forbidden_embedded_sdk_action", request.controller, request.action, ", use user impersonation or security controller instead");
        }
        const warning = lodash_1.default.get(warnEmbeddedActions, [
            request.controller,
            request.action,
        ]);
        if (warning) {
            global.kuzzle.log.warn(warning);
        }
        return super.query(request, options);
    }
}
exports.EmbeddedSDK = EmbeddedSDK;
//# sourceMappingURL=embeddedSdk.js.map