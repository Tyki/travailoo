export declare class IndexCache {
    /**
     * Index map: each entry holds a set of collection names
     *
     * Map<index, Set<collection>>
     */
    private indexes;
    constructor();
    /**
     * Cache a new index
     *
     * @return true if an index was added, false if there is no modification
     */
    addIndex(index: string): boolean;
    /**
     * Cache a new collection
     */
    addCollection(index: string, collection: string): void;
    /**
     * Check an index existence
     */
    hasIndex(index: string): boolean;
    /**
     * Check a collection existence
     */
    hasCollection(index: string, collection: string): boolean;
    /**
     * Return the list of cached indexes
     */
    listIndexes(): string[];
    /**
     * Return the list of an index collections
     *
     * @throws If the provided index does not exist
     */
    listCollections(index: string): string[];
    /**
     * Remove an index from the cache
     */
    removeIndex(index: string): void;
    /**
     * Remove a collection from the cache
     */
    removeCollection(index: string, collection: string): void;
    /**
     * Assert that the provided index exists
     *
     * @throws If the index does not exist
     */
    assertIndexExists(index: string): void;
    /**
     * Assert that the provided index and collection exist
     */
    assertCollectionExists(index: string, collection: string): void;
}
